import telebot
from telebot import types

import config
from data_base import Database

Database.create_table()
bot = telebot.TeleBot(config.token)

USER_ID = None

'''
–§—É–Ω–∫—Ü–∏—è start
'''
@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup()
    help_btn = types.KeyboardButton('/help')
    markup.add(help_btn)
    bot.send_message(message.chat.id, '''–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ Telegram-–±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —É–ø—Ä–∞–≤–ª—è—Ç—å 
–∏—Ö –ª–∏—á–Ω—ã–º–∏ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏, –≤–∫–ª—é—á–∞—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–æ–≤ –∏ –¥–æ—Ö–æ–¥–æ–≤, –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—é —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –∏ –∞–Ω–∞–ª–∏–∑ –ª–∏—á–Ω–æ–≥–æ –±—é–¥–∂–µ—Ç–∞.
–ù–∞–∂–º–∏—Ç–µ /help, —á—Ç–æ–±—ã –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å–æ –≤—Å–µ–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏''' )


'''
–§—É–Ω–∫—Ü–∏—è help
'''
@bot.message_handler(commands=['help'])
def help(message):
    markup = types.ReplyKeyboardMarkup()

    start_btn = types.KeyboardButton('/start')
    help_btn = types.KeyboardButton('/help')

    register_btn = types.KeyboardButton('/register')
    login_btn = types.KeyboardButton('/login')
    
    add_income_btn = types.KeyboardButton('/add_income')
    add_expense_btn = types.KeyboardButton('/add_expense')

    set_goal_btn = types.KeyboardButton('/set_goal')
    view_transactions_btn = types.KeyboardButton('/view_transactions')

    statistics_btn = types.KeyboardButton('/statistics')


    markup.row(start_btn, help_btn)
    markup.row(register_btn, login_btn)
    markup.row(add_income_btn, add_expense_btn)
    markup.row(set_goal_btn, view_transactions_btn)
    markup.row(statistics_btn)

    bot.send_message(message.chat.id,
    "<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
    "üîπ /start ‚Äî –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∫—Ä–∞—Ç–∫–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞.\n"
    "üîπ /register ‚Äî –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–∏—Å—Ç–µ–º–µ.\n"
    "üîπ /login ‚Äî –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –µ–≥–æ –¥–∞–Ω–Ω—ã–º.\n"
    "üîπ /help - –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –∏—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.\n\n"
    "<b>–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:</b>\n"
    "‚ûï /add_income [–∫–∞—Ç–µ–≥–æ—Ä–∏—è] [—Å—É–º–º–∞] ‚Äî –î–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Å—É–º–º—ã –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.\n"
    "‚ûñ /add_expense [–∫–∞—Ç–µ–≥–æ—Ä–∏—è] [—Å—É–º–º–∞] ‚Äî –î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Å—É–º–º—ã –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.\n\n"
    "<b>–¶–µ–ª–∏ –∏ –∞–Ω–∞–ª–∏–∑:</b>\n"
    "üéØ /set_goal [–æ–ø–∏—Å–∞–Ω–∏–µ] [—Å—É–º–º–∞] ‚Äî –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é —Ü–µ–ª—å.\n"
    "üìä /statistics ‚Äî –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –¥–æ—Ö–æ–¥–∞–º, —Ä–∞—Å—Ö–æ–¥–∞–º –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å—É —Ü–µ–ª–µ–π.\n"
    "üìú /view_transactions ‚Äî –ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –≤—ã–±—Ä–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é.\n\n"
, reply_markup=markup, parse_mode="HTML")


'''
–§—É–Ω–∫—Ü–∏—è register
'''
@bot.message_handler(commands=['register'])
def register_start(message):
    markup = types.ReplyKeyboardMarkup()
    register_btn = types.KeyboardButton('/register')
    markup.add(register_btn)
    bot.send_message(message.chat.id,'–í–≤–µ–¥–∏—Ç–µ username –∏ –ø–∞—Ä–æ–ª—å –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª')
    bot.register_next_step_handler(message, register_finish)
    
def register_finish(message):
    message_txt = message.text
    
    if message_txt.count(' ') == 1:
        username, password = message_txt.split(' ')
        if Database.register(username, password) is True:
            Database.register(username, password)
            bot.send_message(message.chat.id, f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω')
        else:
            bot.send_message(message.chat.id,'–≠—Ç–æ—Ç username —É–∂–µ –∑–∞–Ω—è—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
            bot.register_next_step_handler(message, register_start)

    else:
        bot.send_message(message.chat.id,'–í—ã –¥–æ–ø—É—Å—Ç–∏–ª–∏ –±–æ–ª—å—à–µ –æ–¥–Ω–æ–≥–æ –ø—Ä–æ–±–µ–ª–∞ –∏–ª–∏ –Ω–µ –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –µ–≥–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
        bot.register_next_step_handler(message, register_start)

'''
–§—É–Ω–∫—Ü–∏—è login
'''
@bot.message_handler(commands=['login'])
def login_start(message):
    markup = types.ReplyKeyboardMarkup()
    login_btn = types.KeyboardButton('/login')
    markup.add(login_btn)
    bot.send_message(message.chat.id,'–í–≤–µ–¥–∏—Ç–µ –≤–∞—à username –∏ –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª')
    bot.register_next_step_handler(message, login_finish)
    
def login_finish(message):
    global USER_ID

    message_txt = message.text
    
    if message_txt.count(' ') == 1:
        username, password = message_txt.split(' ')
        if Database.login(username, password) is False:
            bot.send_message(message.chat.id,'–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π username –∏–ª–∏ –ø–∞—Ä–æ–ª—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
            bot.register_next_step_handler(message, login_start)
        else:
            USER_ID = Database.login(username, password)
            bot.send_message(message.chat.id,f'–í—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏! –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {username}')
    else:
        bot.send_message(message.chat.id,'–í—ã –¥–æ–ø—É—Å—Ç–∏–ª–∏ –±–æ–ª—å—à–µ –æ–¥–Ω–æ–≥–æ –ø—Ä–æ–±–µ–ª–∞ –∏–ª–∏ –Ω–µ –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –µ–≥–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
        bot.register_next_step_handler(message, login_start)

'''
–§—É–Ω–∫—Ü–∏—è set_goal
'''
@bot.message_handler(commands=['set_goal'])
def set_goal_start(message):
    markup = types.ReplyKeyboardMarkup()
    set_goal_btn = types.KeyboardButton('/set_goal')
    markup.add(set_goal_btn)
    bot.send_message(message.chat.id,'–ü–æ—Å—Ç–∞–≤—Ç–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é —Ü–µ–ª—å: –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Ü–µ–Ω—É —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª')
    bot.register_next_step_handler(message, set_goal_finish)
    
def set_goal_finish(message):
    global USER_ID
    
    if USER_ID is not None:
        message_txt = message.text

        if message_txt.count(' ') == 1:
            title, money_count = message_txt.split(' ')
            if money_count.isdigit() is False:
                bot.send_message(message.chat.id,'–í—ã –Ω–µ –≤–≤–µ–ª–∏ —Å—É–º–º—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
                bot.register_next_step_handler(message, set_goal_start)
            else:
                if Database.check_goal_in_table_by_id(USER_ID, title) is True:
                    Database.set_goal(USER_ID, title, money_count)
                    bot.send_message(message.chat.id,'–ù–æ–≤–∞—è —Ü–µ–ª—å —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞')
                else:
                    bot.send_message(message.chat.id,'–¢–∞–∫–∞—è —Ü–µ–ª—å —É–∂–µ –µ—Å—Ç—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
                    bot.register_next_step_handler(message, set_goal_start)
        else:
            bot.send_message(message.chat.id,'–í—ã –¥–æ–ø—É—Å—Ç–∏–ª–∏ –±–æ–ª—å—à–µ –æ–¥–Ω–æ–≥–æ –ø—Ä–æ–±–µ–ª–∞ –∏–ª–∏ –Ω–µ –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –µ–≥–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
            bot.register_next_step_handler(message, set_goal_start)

    else:
        bot.send_message(message.chat.id,'–í—ã –Ω–µ –≤–æ—à–ª–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç. –í–æ–π–¥–∏—Ç–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
        bot.register_next_step_handler(message, login_start)

'''
–§—É–Ω–∫—Ü–∏—è add_income
'''
@bot.message_handler(commands=['add_income'])
def add_income_start(message):
    markup = types.ReplyKeyboardMarkup()
    add_income_btn = types.KeyboardButton('/add_income')
    markup.add(add_income_btn)
    bot.send_message(message.chat.id,'–î–æ–±–∞–≤—Ç–µ –¥–æ—Ö–æ–¥ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Å—É–º–º—ã —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª')
    bot.register_next_step_handler(message, add_income_finish)
    
def add_income_finish(message):
    global USER_ID
    
    if USER_ID is not None:
        message_txt = message.text

        if message_txt.count(' ') == 1:
            title, income = message_txt.split(' ')
            if income.isdigit() is False:
                bot.send_message(message.chat.id,'–í—ã –Ω–µ –≤–≤–µ–ª–∏ —Å—É–º–º—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
                bot.register_next_step_handler(message, add_income_start)
            else:
                if Database.find_title_in_tables_goal_with_user_id(USER_ID, title) is True:
                    price_after, save = None, None
                    price_after, save = Database.add_income(USER_ID, title, int(income))
                    if price_after is None or save is None:
                        bot.send_message(message.chat.id,f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã –Ω–∞–∫–æ–ø–∏–ª–∏ –Ω–∞ —Å–≤–æ—é —Ü–µ–ª—å!!! –í—ã –≤–Ω–µ—Å–ª–∏ —Å–≤–µ—Ä—Ö {save}')
                    else:
                        bot.send_message(message.chat.id,f'–ú–æ–ª–æ–¥—Ü—ã! –í—ã –≤–Ω–µ—Å–ª–∏ —É–∂–µ {price_after}. –í–∞–º –æ—Å—Ç–∞–ª–æ—Å—å –Ω–∞–∫–æ–ø–∏—Ç—å {save}')

                if Database.find_title_in_tables_goal_with_user_id(USER_ID, title) is False:
                    bot.send_message(message.chat.id,'–ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
                    bot.register_next_step_handler(message, add_income_start)

        else:
            bot.send_message(message.chat.id,'–í—ã –¥–æ–ø—É—Å—Ç–∏–ª–∏ –±–æ–ª—å—à–µ –æ–¥–Ω–æ–≥–æ –ø—Ä–æ–±–µ–ª–∞ –∏–ª–∏ –Ω–µ –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –µ–≥–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
            bot.register_next_step_handler(message, add_income_start)

    else:
        bot.send_message(message.chat.id,'–í—ã –Ω–µ –≤–æ—à–ª–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç. –í–æ–π–¥–∏—Ç–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
        bot.register_next_step_handler(message, login_start)

'''
–§—É–Ω–∫—Ü–∏—è add_expense
'''
@bot.message_handler(commands=['add_expense'])
def add_expense_start(message):
    markup = types.ReplyKeyboardMarkup()
    add_expense_btn = types.KeyboardButton('/add_expense')
    markup.add(add_expense_btn)
    bot.send_message(message.chat.id,'–î–æ–±–∞–≤—Ç–µ —Ä–∞—Å—Ö–æ–¥ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Å—É–º–º—ã —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª')
    bot.register_next_step_handler(message, add_expense_finish)
    
def add_expense_finish(message):
    global USER_ID
    
    if USER_ID is not None:
        message_txt = message.text

        if message_txt.count(' ') == 1:
            title, expense = message_txt.split(' ')
            if expense.isdigit() is False:
                bot.send_message(message.chat.id,'–í—ã –Ω–µ –≤–≤–µ–ª–∏ —Å—É–º–º—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
                bot.register_next_step_handler(message, add_expense_start)
        
            if Database.find_title_in_tables_goal_with_user_id(USER_ID, title) is True:
                price_after, save = Database.add_expense(USER_ID, title, int(expense))
                bot.send_message(message.chat.id,f'–í—ã —É–∂–µ –≤–Ω–µ—Å–ª–∏ –Ω–∞ —Ü–µ–ª—å {price_after} —Å —É—á—ë—Ç–æ–º —Ä–∞—Å—Ö–æ–¥–∞. –í–∞–º –æ—Å—Ç–∞–ª–æ—Å—å –Ω–∞–∫–æ–ø–∏—Ç—å {save}')

            if Database.find_title_in_tables_goal_with_user_id(USER_ID, title) is False:
                bot.send_message(message.chat.id,'–ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
                bot.register_next_step_handler(message, add_expense_start)
        
        else:
            bot.send_message(message.chat.id,'–í—ã –¥–æ–ø—É—Å—Ç–∏–ª–∏ –±–æ–ª—å—à–µ –æ–¥–Ω–æ–≥–æ –ø—Ä–æ–±–µ–ª–∞ –∏–ª–∏ –Ω–µ –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –µ–≥–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
            bot.register_next_step_handler(message, add_expense_start)

    else:
        bot.send_message(message.chat.id,'–í—ã –Ω–µ –≤–æ—à–ª–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç. –í–æ–π–¥–∏—Ç–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
        bot.register_next_step_handler(message, login_start)

'''
–§—É–Ω–∫—Ü–∏—è view_transactions
'''
@bot.message_handler(commands=['view_transactions'])
def view_transactions_start(message):
    markup = types.ReplyKeyboardMarkup()
    view_transactions_btn = types.KeyboardButton('/view_transactions')
    markup.add(view_transactions_btn)
    bot.send_message(message.chat.id,'–í–≤–µ–¥–∏—Ç–µ –∫–∞–∫—É—é-–ª–∏–±–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, —Å—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ –Ω–µ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏. –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç–µ—Ä—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è, –Ω–∞–±–µ—Ä–∏—Ç–µ "–í—Å–µ"!')
    bot.register_next_step_handler(message, view_transactions_finish)
    
def view_transactions_finish(message):
    global USER_ID
    
    if USER_ID is not None:
        message_txt = message.text

        if message_txt.count(' ') == 0:
            title = message_txt
            
            if title == '–í—Å–µ':
                incomes = Database.view_transactions_incomes(USER_ID, None)
                expenses = Database.view_transactions_expenses(USER_ID, None)
                if incomes is None:
                    bot.send_message(message.chat.id, f'–£ –≤–∞—Å –¥–æ—Ö–æ–¥–æ–≤ –Ω–µ—Ç')
                else:
                    for income in incomes:
                        user_id, title, income, created_at = income
                        bot.send_message(message.chat.id, f'–î–û–•–û–î: –Ω–∞–∑–≤–∞–Ω–∏–µ: {title}, –≤–Ω–µ—Å–µ–Ω–∏–µ: {income}, –≤—Ä–µ–º—è –∏ –¥–∞—Ç–∞: {created_at}')
                
                if expenses is None:
                    bot.send_message(message.chat.id, f'–£ –≤–∞—Å —Ä–æ—Å—Ö–æ–¥–æ–≤ –Ω–µ—Ç')
                else:
                    for expense in expenses:
                        user_id, title, expense, created_at = expense
                        bot.send_message(message.chat.id, f'–†–∞—Å—Ö–æ–¥: –Ω–∞–∑–≤–∞–Ω–∏–µ: {title}, —Å–Ω—è—Ç–∏–µ: {expense}, –≤—Ä–µ–º—è –∏ –¥–∞—Ç–∞: {created_at}')    
            else:
                if Database.find_title_in_tables_goal_with_user_id(USER_ID, title) is True:
                    incomes = Database.view_transactions_incomes(USER_ID, title)
                    expenses = Database.view_transactions_expenses(USER_ID, title)
                    if incomes is None:
                        bot.send_message(message.chat.id, f'–î–æ—Ö–æ–¥–æ–≤ –Ω–∞ —ç—Ç—É –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–µ—Ç')
                    else:
                        for income in incomes:
                            user_id, title, income, created_at = income
                            bot.send_message(message.chat.id, f'–î–û–•–û–î: –Ω–∞–∑–≤–∞–Ω–∏–µ: {title}, –≤–Ω–µ—Å–µ–Ω–∏–µ: {income}, –≤—Ä–µ–º—è –∏ –¥–∞—Ç–∞: {created_at}')

                    if expenses is None:
                        bot.send_message(message.chat.id, f'–†–∞—Å—Ö–æ–¥–æ–≤ –Ω–∞ —ç—Ç—É –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–µ—Ç')
                    else:
                        for expense in expenses:
                            user_id, title, expense, created_at = expense
                            bot.send_message(message.chat.id, f'–†–∞—Å—Ö–æ–¥: –Ω–∞–∑–≤–∞–Ω–∏–µ: {title}, —Å–Ω—è—Ç–∏–µ: {expense}, –≤—Ä–µ–º—è –∏ –¥–∞—Ç–∞: {created_at}')    

                if Database.find_title_in_tables_goal_with_user_id(USER_ID, title) is False:
                    bot.send_message(message.chat.id,'–ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
                    bot.register_next_step_handler(message, view_transactions_start)
        
        else:
            bot.send_message(message.chat.id,'–ù—É–∂–Ω–æ –≤–≤—Å–µ—Ç–∏ —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ —Å–ª–æ–≤–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
            bot.register_next_step_handler(message, view_transactions_start)

    else:
        bot.send_message(message.chat.id,'–í—ã –Ω–µ –≤–æ—à–ª–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç. –í–æ–π–¥–∏—Ç–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
        bot.register_next_step_handler(message, login_start)

'''
–§—É–Ω–∫—Ü–∏—è statistics
'''
@bot.message_handler(commands=['statistics'])
def statistics_start(message):
    markup = types.ReplyKeyboardMarkup()
    statistics_btn = types.KeyboardButton('/statistics')
    markup.add(statistics_btn)
    bot.send_message(message.chat.id,'...')
    bot.register_next_step_handler(message, statistics_finish)
    
def statistics_finish(message):
    global USER_ID
    
    if USER_ID is not None:
        message_txt = message.text

        if message_txt.count(' ') == 0:
            title = message_txt
            
            if title == '–í—Å–µ':
                incomes, expenses = Database.statistics(USER_ID, None)

                if incomes is None:
                    bot.send_message(message.chat.id, f'–£ –≤–∞—Å –¥–æ—Ö–æ–¥–æ–≤ –Ω–µ—Ç')
                else:
                    bot.send_message(message.chat.id, f'–û–±—â–∏–µ –≤–Ω–µ—Å–µ–Ω–∏–µ: {incomes}')
                
                if expenses is None:
                    bot.send_message(message.chat.id, f'–£ –≤–∞—Å —Ä–æ—Å—Ö–æ–¥–æ–≤ –Ω–µ—Ç')
                else:
                   bot.send_message(message.chat.id, f'–û–±—â–∏–µ —Ç—Ä–∞—Ç—ã: {expenses}')

                with open("download_graficks/grafick.jpg", 'rb') as photo:
                    bot.send_photo(message.chat.id, photo)
                
            else:
                if Database.find_title_in_tables_goal_with_user_id(USER_ID, title) is True:
                    incomes, expenses = Database.statistics(USER_ID, title)

                    if incomes is None:
                        bot.send_message(message.chat.id, f'–£ –≤–∞—Å –¥–æ—Ö–æ–¥–æ–≤ –Ω–µ—Ç –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é {title}')
                    else:
                        bot.send_message(message.chat.id, f'–û–±—â–∏–µ –≤–Ω–µ—Å–µ–Ω–∏–µ –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é {title}: {incomes}')

                    if expenses is None:
                        bot.send_message(message.chat.id, f'–£ –≤–∞—Å —Ä–æ—Å—Ö–æ–¥–æ–≤ –Ω–µ—Ç –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é {title}')
                    else:
                        bot.send_message(message.chat.id, f'–û–±—â–∏–µ —Ç—Ä–∞—Ç—ã –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é {title}: {expenses}')

                    with open("download_graficks/grafick.jpg", 'rb') as photo:
                        bot.send_photo(message.chat.id, photo)

                if Database.find_title_in_tables_goal_with_user_id(USER_ID, title) is False:
                    bot.send_message(message.chat.id,'–ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
                    bot.register_next_step_handler(message, statistics_start)

        else:
            bot.send_message(message.chat.id,'–ù—É–∂–Ω–æ –≤–≤—Å–µ—Ç–∏ —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ —Å–ª–æ–≤–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
            bot.register_next_step_handler(message, statistics_start)

    else:
        bot.send_message(message.chat.id,'–í—ã –Ω–µ –≤–æ—à–ª–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç. –í–æ–π–¥–∏—Ç–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
        bot.register_next_step_handler(message, login_start)
